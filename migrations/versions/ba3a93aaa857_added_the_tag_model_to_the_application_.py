"""added the tag model to the application, and word_tag model to contains the relationship between tags on words

Revision ID: ba3a93aaa857
Revises: 26d8973917ff
Create Date: 2023-11-11 12:52:21.308502

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ba3a93aaa857'
down_revision = '26d8973917ff'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'tag',
        sa.Column('id', sa.String(length=50), nullable=False),
        sa.Column('tag', sa.String(length=400), nullable=False),
        sa.Column('date_created', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('tag', name='unq_tag_indx')
    )
    with op.batch_alter_table('tag', schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f('ix_tag_date_created'), ['date_created'], unique=False)
        batch_op.create_index(batch_op.f('ix_tag_tag'), ['tag'], unique=False)

    op.create_table(
        'word_tag',
        sa.Column('id', sa.String(length=50), nullable=False),
        sa.Column('tag_id', sa.String(length=50), nullable=False),
        sa.Column('word_id', sa.String(length=50), nullable=False),
        sa.Column('date_created', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ['tag_id'], ['tag.id'], name='fk_word_tag_tag_indx'),
        sa.ForeignKeyConstraint(
            ['word_id'], ['word.id'], name='fk_word_tag_word_indx'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('tag_id', 'word_id', name='unq_word_tag_indx')
    )
    with op.batch_alter_table('word_tag', schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f('ix_word_tag_date_created'), ['date_created'],
            unique=False)
        batch_op.create_index(
            batch_op.f('ix_word_tag_tag_id'), ['tag_id'], unique=False)
        batch_op.create_index(
            batch_op.f('ix_word_tag_word_id'), ['word_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('word_tag', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_word_tag_word_id'))
        batch_op.drop_index(batch_op.f('ix_word_tag_tag_id'))
        batch_op.drop_index(batch_op.f('ix_word_tag_date_created'))

    op.drop_table('word_tag')
    
    with op.batch_alter_table('tag', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tag_tag'))
        batch_op.drop_index(batch_op.f('ix_tag_date_created'))

    op.drop_table('tag')
    # ### end Alembic commands ###
