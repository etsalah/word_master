"""make ver_id field not nullable on word_tag, word table

Revision ID: e6570740bdae
Revises: 061a586250cb
Create Date: 2023-11-15 21:52:14.604491

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e6570740bdae'
down_revision = '061a586250cb'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("UPDATE tag SET ver_id = 0 WHERE ver_id IS NULL")
    with op.batch_alter_table('tag', schema=None) as batch_op:
        batch_op.alter_column('ver_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    op.execute("UPDATE word SET ver_id = 0 WHERE ver_id IS NULL")
    with op.batch_alter_table('word', schema=None) as batch_op:
        batch_op.alter_column('ver_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    op.execute("UPDATE word_tag SET ver_id = 0 WHERE ver_id IS NULL")
    with op.batch_alter_table('word_tag', schema=None) as batch_op:
        batch_op.alter_column('ver_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('word_tag', schema=None) as batch_op:
        batch_op.alter_column('ver_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('word', schema=None) as batch_op:
        batch_op.alter_column('ver_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('tag', schema=None) as batch_op:
        batch_op.alter_column('ver_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    # ### end Alembic commands ###
